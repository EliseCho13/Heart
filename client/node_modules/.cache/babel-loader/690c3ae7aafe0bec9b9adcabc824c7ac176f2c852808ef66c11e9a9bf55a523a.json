{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useMemo } from 'react';\nconst useCurrentLocation = async () => {\n  _s();\n  const [location, setLocation] = useState();\n  const success = position => {\n    const {\n      latitude,\n      longitude\n    } = position.coords;\n    setLocation({\n      latitude,\n      longitude\n    });\n  };\n  const error = () => {\n    setLocation({\n      latitude: 37.483034,\n      longitude: 126.902435\n    });\n    // TODO: 실패시 위치정보를 허용해달라는 메시지가 표시된 페이지로 이동 또는 경고창이나 모달 띄우기\n    console.log('위치 받기 실패. 디폴트 위치를 가져옵니다.');\n  };\n  useMemo(() => {\n    const {\n      geolocation\n    } = navigator;\n    if (!geolocation) {\n      error();\n      return;\n    }\n    geolocation.getCurrentPosition(success, error);\n  }, [navigator.geolocation.getCurrentPosition]);\n  // TODO: redux에 저장해도 될 듯\n  return location;\n};\n_s(useCurrentLocation, \"h/RKKxfAx4+wwGlelfFktsSMeBw=\");\nexport default useCurrentLocation;","map":{"version":3,"names":["useState","useMemo","useCurrentLocation","location","setLocation","success","position","latitude","longitude","coords","error","console","log","geolocation","navigator","getCurrentPosition"],"sources":["/Users/apple/seb41_main_001/client/src/utils/useCurrentLocation.tsx"],"sourcesContent":["import { useState, useMemo } from 'react';\n\ninterface LocationProps {\n  latitude: number;\n  longitude: number;\n}\n\nconst useCurrentLocation = async () => {\n  const [location, setLocation] = useState<LocationProps>();\n  const success = (position: any) => {\n    const { latitude, longitude } = position.coords;\n    setLocation({ latitude, longitude });\n  };\n  const error = () => {\n    setLocation({ latitude: 37.483034, longitude: 126.902435 });\n    // TODO: 실패시 위치정보를 허용해달라는 메시지가 표시된 페이지로 이동 또는 경고창이나 모달 띄우기\n    console.log('위치 받기 실패. 디폴트 위치를 가져옵니다.');\n  };\n\n  useMemo(() => {\n    const { geolocation } = navigator;\n    if (!geolocation) {\n      error();\n      return;\n    }\n    geolocation.getCurrentPosition(success, error);\n  }, [navigator.geolocation.getCurrentPosition]);\n  // TODO: redux에 저장해도 될 듯\n  return location;\n};\n\nexport default useCurrentLocation;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAOzC,MAAMC,kBAAkB,GAAG,YAAY;EAAA;EACrC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,EAAiB;EACzD,MAAMK,OAAO,GAAIC,QAAa,IAAK;IACjC,MAAM;MAAEC,QAAQ;MAAEC;IAAU,CAAC,GAAGF,QAAQ,CAACG,MAAM;IAC/CL,WAAW,CAAC;MAAEG,QAAQ;MAAEC;IAAU,CAAC,CAAC;EACtC,CAAC;EACD,MAAME,KAAK,GAAG,MAAM;IAClBN,WAAW,CAAC;MAAEG,QAAQ,EAAE,SAAS;MAAEC,SAAS,EAAE;IAAW,CAAC,CAAC;IAC3D;IACAG,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;EACzC,CAAC;EAEDX,OAAO,CAAC,MAAM;IACZ,MAAM;MAAEY;IAAY,CAAC,GAAGC,SAAS;IACjC,IAAI,CAACD,WAAW,EAAE;MAChBH,KAAK,EAAE;MACP;IACF;IACAG,WAAW,CAACE,kBAAkB,CAACV,OAAO,EAAEK,KAAK,CAAC;EAChD,CAAC,EAAE,CAACI,SAAS,CAACD,WAAW,CAACE,kBAAkB,CAAC,CAAC;EAC9C;EACA,OAAOZ,QAAQ;AACjB,CAAC;AAAC,GAtBID,kBAAkB;AAwBxB,eAAeA,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}