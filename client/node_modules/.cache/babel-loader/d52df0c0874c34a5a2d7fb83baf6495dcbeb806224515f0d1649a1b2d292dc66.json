{"ast":null,"code":"var _jsxFileName = \"/Users/apple/seb41_main_001/client/src/components/KakaoMapClick.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable no-new */\nimport { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport markerImg from '../img/placeholder.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  /* display: block; */\n\n  .customoverlay {\n    span {\n      padding: 10px;\n      border-radius: 1rem;\n      background-color: rgba(1, 1, 1, 0.2);\n      border: 0.05rem solid black;\n      color: black;\n      font-weight: 600;\n    }\n  }\n`;\n_c = MapContainer;\nconst KakaoMapClick = _ref => {\n  _s();\n  let {\n    latitude,\n    longitude,\n    overlayvalue = '현재 위치'\n  } = _ref;\n  const mapContainer = useRef(null);\n  const {\n    kakao\n  } = window;\n  const position = new kakao.maps.LatLng(latitude, longitude);\n  const mapOptions = {\n    center: position,\n    // 지도의 중심좌표\n    level: 4 // 지도의 확대 레벨\n  };\n\n  useEffect(() => {\n    const map = new kakao.maps.Map(mapContainer.current, mapOptions);\n    const imageSrc = markerImg;\n    const imageSize = new kakao.maps.Size(53, 60);\n    const imageOption = {\n      offset: new kakao.maps.Point(27, 69)\n    };\n    const markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption);\n    // const markerPosition = new kakao.maps.LatLng(latitude, longitude);\n\n    const marker = new kakao.maps.Marker({\n      position: map.getCenter(),\n      image: markerImage\n    }); // 마커 생성\n\n    // 커스텀 오버레이에 표출될 내용\n    const content = `\n    <div class=\"customoverlay\">\n    <span>${overlayvalue}</span>\n    </div>\n    `;\n\n    // 커스텀 오버레이 생성\n    new kakao.maps.CustomOverlay({\n      map,\n      position,\n      content\n    });\n\n    // 마커가 지도 위에 표시되도록 설정\n    marker.setMap(map);\n    kakao.maps.event.addListener(map, 'click', mouseEvent => {\n      // 클릭한 위도, 경도 정보를 가져옵니다\n      const latlng = mouseEvent.latLng;\n\n      // 마커 위치를 클릭한 위치로 옮깁니다\n      marker.setPosition(latlng);\n      let message = `클릭한 위치의 위도는 ${latlng.getLat()} 이고, `;\n      message += `경도는 ${latlng.getLng()} 입니다`;\n      const resultDiv = document.getElementById('clickLatlng');\n      if (resultDiv !== null) {\n        resultDiv.innerHTML = message;\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    id: \"kakao-map\",\n    ref: mapContainer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 10\n  }, this);\n};\n_s(KakaoMapClick, \"6zcGo6SVCAaKoYrOkDL9zc4/xh8=\");\n_c2 = KakaoMapClick;\nexport default KakaoMapClick;\nvar _c, _c2;\n$RefreshReg$(_c, \"MapContainer\");\n$RefreshReg$(_c2, \"KakaoMapClick\");","map":{"version":3,"names":["useEffect","useRef","styled","markerImg","MapContainer","div","KakaoMapClick","latitude","longitude","overlayvalue","mapContainer","kakao","window","position","maps","LatLng","mapOptions","center","level","map","Map","current","imageSrc","imageSize","Size","imageOption","offset","Point","markerImage","MarkerImage","marker","Marker","getCenter","image","content","CustomOverlay","setMap","event","addListener","mouseEvent","latlng","latLng","setPosition","message","getLat","getLng","resultDiv","document","getElementById","innerHTML"],"sources":["/Users/apple/seb41_main_001/client/src/components/KakaoMapClick.tsx"],"sourcesContent":["/* eslint-disable no-new */\nimport { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport markerImg from '../img/placeholder.png';\n\nconst MapContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  /* display: block; */\n\n  .customoverlay {\n    span {\n      padding: 10px;\n      border-radius: 1rem;\n      background-color: rgba(1, 1, 1, 0.2);\n      border: 0.05rem solid black;\n      color: black;\n      font-weight: 600;\n    }\n  }\n`;\n\ninterface KakaoMapProps {\n  latitude: number;\n  longitude: number;\n  overlayvalue?: string;\n}\n\nconst KakaoMapClick = ({\n  latitude,\n  longitude,\n  overlayvalue = '현재 위치',\n}: KakaoMapProps) => {\n  const mapContainer = useRef<HTMLDivElement>(null);\n  const { kakao } = window;\n  const position = new kakao.maps.LatLng(latitude, longitude);\n  const mapOptions = {\n    center: position, // 지도의 중심좌표\n    level: 4, // 지도의 확대 레벨\n  };\n\n  useEffect(() => {\n    const map = new kakao.maps.Map(mapContainer.current!, mapOptions);\n\n    const imageSrc = markerImg;\n    const imageSize = new kakao.maps.Size(53, 60);\n    const imageOption = { offset: new kakao.maps.Point(27, 69) };\n\n    const markerImage = new kakao.maps.MarkerImage(\n      imageSrc,\n      imageSize,\n      imageOption,\n    );\n    // const markerPosition = new kakao.maps.LatLng(latitude, longitude);\n\n    const marker = new kakao.maps.Marker({\n      position: map.getCenter(),\n      image: markerImage,\n    }); // 마커 생성\n\n    // 커스텀 오버레이에 표출될 내용\n    const content = `\n    <div class=\"customoverlay\">\n    <span>${overlayvalue}</span>\n    </div>\n    `;\n\n    // 커스텀 오버레이 생성\n    new kakao.maps.CustomOverlay({\n      map,\n      position,\n      content,\n    });\n\n    // 마커가 지도 위에 표시되도록 설정\n    marker.setMap(map);\n\n    kakao.maps.event.addListener(map, 'click', (mouseEvent: any) => {\n      // 클릭한 위도, 경도 정보를 가져옵니다\n      const latlng = mouseEvent.latLng;\n\n      // 마커 위치를 클릭한 위치로 옮깁니다\n      marker.setPosition(latlng);\n\n      let message = `클릭한 위치의 위도는 ${latlng.getLat()} 이고, `;\n      message += `경도는 ${latlng.getLng()} 입니다`;\n\n      const resultDiv = document.getElementById('clickLatlng');\n      if (resultDiv !== null) {\n        resultDiv.innerHTML = message;\n      }\n    });\n  }, []);\n\n  return <MapContainer id=\"kakao-map\" ref={mapContainer} />;\n};\n\nexport default KakaoMapClick;\n"],"mappings":";;AAAA;AACA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,SAAS,MAAM,wBAAwB;AAAC;AAE/C,MAAMC,YAAY,GAAGF,MAAM,CAACG,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,KAfID,YAAY;AAuBlB,MAAME,aAAa,GAAG,QAID;EAAA;EAAA,IAJE;IACrBC,QAAQ;IACRC,SAAS;IACTC,YAAY,GAAG;EACF,CAAC;EACd,MAAMC,YAAY,GAAGT,MAAM,CAAiB,IAAI,CAAC;EACjD,MAAM;IAAEU;EAAM,CAAC,GAAGC,MAAM;EACxB,MAAMC,QAAQ,GAAG,IAAIF,KAAK,CAACG,IAAI,CAACC,MAAM,CAACR,QAAQ,EAAEC,SAAS,CAAC;EAC3D,MAAMQ,UAAU,GAAG;IACjBC,MAAM,EAAEJ,QAAQ;IAAE;IAClBK,KAAK,EAAE,CAAC,CAAE;EACZ,CAAC;;EAEDlB,SAAS,CAAC,MAAM;IACd,MAAMmB,GAAG,GAAG,IAAIR,KAAK,CAACG,IAAI,CAACM,GAAG,CAACV,YAAY,CAACW,OAAO,EAAGL,UAAU,CAAC;IAEjE,MAAMM,QAAQ,GAAGnB,SAAS;IAC1B,MAAMoB,SAAS,GAAG,IAAIZ,KAAK,CAACG,IAAI,CAACU,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC;IAC7C,MAAMC,WAAW,GAAG;MAAEC,MAAM,EAAE,IAAIf,KAAK,CAACG,IAAI,CAACa,KAAK,CAAC,EAAE,EAAE,EAAE;IAAE,CAAC;IAE5D,MAAMC,WAAW,GAAG,IAAIjB,KAAK,CAACG,IAAI,CAACe,WAAW,CAC5CP,QAAQ,EACRC,SAAS,EACTE,WAAW,CACZ;IACD;;IAEA,MAAMK,MAAM,GAAG,IAAInB,KAAK,CAACG,IAAI,CAACiB,MAAM,CAAC;MACnClB,QAAQ,EAAEM,GAAG,CAACa,SAAS,EAAE;MACzBC,KAAK,EAAEL;IACT,CAAC,CAAC,CAAC,CAAC;;IAEJ;IACA,MAAMM,OAAO,GAAI;AACrB;AACA,YAAYzB,YAAa;AACzB;AACA,KAAK;;IAED;IACA,IAAIE,KAAK,CAACG,IAAI,CAACqB,aAAa,CAAC;MAC3BhB,GAAG;MACHN,QAAQ;MACRqB;IACF,CAAC,CAAC;;IAEF;IACAJ,MAAM,CAACM,MAAM,CAACjB,GAAG,CAAC;IAElBR,KAAK,CAACG,IAAI,CAACuB,KAAK,CAACC,WAAW,CAACnB,GAAG,EAAE,OAAO,EAAGoB,UAAe,IAAK;MAC9D;MACA,MAAMC,MAAM,GAAGD,UAAU,CAACE,MAAM;;MAEhC;MACAX,MAAM,CAACY,WAAW,CAACF,MAAM,CAAC;MAE1B,IAAIG,OAAO,GAAI,eAAcH,MAAM,CAACI,MAAM,EAAG,OAAM;MACnDD,OAAO,IAAK,OAAMH,MAAM,CAACK,MAAM,EAAG,MAAK;MAEvC,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;MACxD,IAAIF,SAAS,KAAK,IAAI,EAAE;QACtBA,SAAS,CAACG,SAAS,GAAGN,OAAO;MAC/B;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO,QAAC,YAAY;IAAC,EAAE,EAAC,WAAW;IAAC,GAAG,EAAEjC;EAAa;IAAA;IAAA;IAAA;EAAA,QAAG;AAC3D,CAAC;AAAC,GAnEIJ,aAAa;AAAA,MAAbA,aAAa;AAqEnB,eAAeA,aAAa;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}