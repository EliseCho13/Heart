{"ast":null,"code":"var _jsxFileName = \"/Users/apple/seb41_main_001/client/src/components/CommentSubmitBox.tsx\",\n  _s = $RefreshSig$();\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubmitContainter = styled.form`\n  width: 100%;\n  display: flex;\n  textarea {\n    width: 100%;\n    height: 120px;\n    margin-right: 20px;\n    background-color: rgba(255, 255, 255, 0);\n    color: white;\n    font-size: 100%;\n    padding: 10px;\n    &::placeholder {\n      font-size: 100%;\n    }\n  }\n  button {\n    white-space: nowrap;\n  }\n`;\n\n// TODO: handleCommentSubmit props로 받을 것.\n_c = SubmitContainter;\nconst CommentSubmitBox = _ref => {\n  _s();\n  let {\n    value = '',\n    submitComment,\n    setModifying,\n    setData\n  } = _ref;\n  const [comment, setComment] = useState(value);\n  const LOGIN_ID = localStorage.getItem('memberId');\n  const handleCommentSubmit = e => {\n    e.preventDefault();\n    if (comment.trim() !== '' && setModifying) {\n      // 댓글을 수정하는 경우\n      console.log(`PATCH ${process.env.REACT_APP_API_URL}${submitComment}`, comment);\n      axios.patch(`${process.env.REACT_APP_API_URL}${submitComment}`, {\n        body: comment,\n        memberId: LOGIN_ID\n      }, {\n        headers: {\n          Authorization: localStorage.getItem('AccessToken'),\n          Refresh: localStorage.getItem('RefreshToken')\n        }\n      }).then(res => {\n        console.log(res);\n        setData(res.data.data);\n      }).catch(err => console.log(err));\n      setModifying(false);\n    } else if (comment.trim() !== '') {\n      // 댓글을 등록하는 경우\n      console.log(`POST ${submitComment}`, comment);\n      axios.post(`${process.env.REACT_APP_API_URL}${submitComment}`, {\n        body: comment,\n        memberId: LOGIN_ID\n      }, {\n        headers: {\n          Authorization: localStorage.getItem('AccessToken'),\n          Refresh: localStorage.getItem('RefreshToken')\n        }\n      }).then(res => {\n        console.log(res);\n        setData(res.data.data);\n      }).catch(err => console.log(err));\n      setComment('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SubmitContainter, {\n    onSubmit: handleCommentSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      required: true,\n      maxLength: 500,\n      value: comment,\n      placeholder: \"\\uB313\\uAE00\\uC744 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694\",\n      onChange: e => setComment(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      value: \"\\uB313\\uAE00 \\uB4F1\\uB85D\",\n      onClick: handleCommentSubmit,\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentSubmitBox, \"QWNoGOvjNQjhCeG+pnmlqNnvXec=\");\n_c2 = CommentSubmitBox;\nexport default CommentSubmitBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"SubmitContainter\");\n$RefreshReg$(_c2, \"CommentSubmitBox\");","map":{"version":3,"names":["styled","useState","axios","Button","SubmitContainter","form","CommentSubmitBox","value","submitComment","setModifying","setData","comment","setComment","LOGIN_ID","localStorage","getItem","handleCommentSubmit","e","preventDefault","trim","console","log","process","env","REACT_APP_API_URL","patch","body","memberId","headers","Authorization","Refresh","then","res","data","catch","err","post","target"],"sources":["/Users/apple/seb41_main_001/client/src/components/CommentSubmitBox.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport Button from './Button';\n\nconst SubmitContainter = styled.form`\n  width: 100%;\n  display: flex;\n  textarea {\n    width: 100%;\n    height: 120px;\n    margin-right: 20px;\n    background-color: rgba(255, 255, 255, 0);\n    color: white;\n    font-size: 100%;\n    padding: 10px;\n    &::placeholder {\n      font-size: 100%;\n    }\n  }\n  button {\n    white-space: nowrap;\n  }\n`;\n\n// TODO: handleCommentSubmit props로 받을 것.\n\ninterface CommentSubmitProps {\n  value?: string;\n  submitComment: string;\n  setModifying?: (value: boolean) => void;\n  setData: any;\n}\n\nconst CommentSubmitBox = ({\n  value = '',\n  submitComment,\n  setModifying,\n  setData,\n}: CommentSubmitProps) => {\n  const [comment, setComment] = useState(value);\n  const LOGIN_ID = localStorage.getItem('memberId');\n  const handleCommentSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    if (comment.trim() !== '' && setModifying) {\n      // 댓글을 수정하는 경우\n      console.log(\n        `PATCH ${process.env.REACT_APP_API_URL}${submitComment}`,\n        comment,\n      );\n      axios\n        .patch(\n          `${process.env.REACT_APP_API_URL}${submitComment}`,\n          {\n            body: comment,\n            memberId: LOGIN_ID,\n          },\n          {\n            headers: {\n              Authorization: localStorage.getItem('AccessToken'),\n              Refresh: localStorage.getItem('RefreshToken'),\n            },\n          },\n        )\n        .then((res) => {\n          console.log(res);\n          setData(res.data.data);\n        })\n        .catch((err) => console.log(err));\n      setModifying(false);\n    } else if (comment.trim() !== '') {\n      // 댓글을 등록하는 경우\n      console.log(`POST ${submitComment}`, comment);\n      axios\n        .post(\n          `${process.env.REACT_APP_API_URL}${submitComment}`,\n          {\n            body: comment,\n            memberId: LOGIN_ID,\n          },\n          {\n            headers: {\n              Authorization: localStorage.getItem('AccessToken'),\n              Refresh: localStorage.getItem('RefreshToken'),\n            },\n          },\n        )\n        .then((res) => {\n          console.log(res);\n          setData(res.data.data);\n        })\n        .catch((err) => console.log(err));\n      setComment('');\n    }\n  };\n\n  return (\n    <SubmitContainter onSubmit={handleCommentSubmit}>\n      <textarea\n        required\n        maxLength={500}\n        value={comment}\n        placeholder=\"댓글을 작성해주세요\"\n        onChange={(e) => setComment(e.target.value)}\n      />\n      <Button value=\"댓글 등록\" onClick={handleCommentSubmit} type=\"submit\" />\n    </SubmitContainter>\n  );\n};\n\nexport default CommentSubmitBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}