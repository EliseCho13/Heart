{"ast":null,"code":"var _jsxFileName = \"/Users/apple/seb41_main_001/client/src/components/CommentSubmitBox.tsx\",\n  _s = $RefreshSig$();\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubmitContainter = styled.form`\n  width: 100%;\n  display: flex;\n  textarea {\n    width: 100%;\n    height: 120px;\n    margin-right: 20px;\n    background-color: rgba(255, 255, 255, 0);\n    color: white;\n    font-size: 100%;\n    padding: 10px;\n    &::placeholder {\n      font-size: 100%;\n    }\n  }\n  button {\n    white-space: nowrap;\n  }\n`;\n\n// TODO: handleCommentSubmit props로 받을 것.\n_c = SubmitContainter;\nconst CommentSubmitBox = _ref => {\n  _s();\n  let {\n    value = '',\n    submitComment,\n    setModifying,\n    setData\n  } = _ref;\n  const [comment, setComment] = useState(value);\n  // const LOGIN_ID = localStorage.getItem('memberId') || -1;\n  const accessToken = useSelector(state => state.accessToken);\n  const refreshToken = useSelector(state => state.refreshToken);\n  const memberId = useSelector(state => state.memberId);\n  const navigate = useNavigate();\n  const handleCommentSubmit = e => {\n    e.preventDefault();\n    if (comment.trim() !== '' && setModifying) {\n      // 댓글을 수정하는 경우\n      console.log(`PATCH ${process.env.REACT_APP_API_URL}${submitComment}`, comment);\n      axios.patch(`${process.env.REACT_APP_API_URL}${submitComment}`, {\n        body: comment,\n        memberId\n      }, {\n        headers: {\n          Authorization: accessToken,\n          Refresh: refreshToken\n        }\n      }).then(res => {\n        console.log(res);\n        setData(res.data.data);\n      }).catch(err => console.log(err));\n      setModifying(false);\n    } else if (comment.trim() !== '') {\n      // 댓글을 등록하는 경우\n      console.log(`POST ${submitComment}`, comment);\n      if (memberId && Number(memberId) !== -1) {\n        axios.post(`${process.env.REACT_APP_API_URL}${submitComment}`, {\n          body: comment,\n          memberId\n        }, {\n          headers: {\n            Authorization: accessToken,\n            Refresh: refreshToken\n          }\n        }).then(res => {\n          console.log(res);\n          setData(res.data.data);\n        }).catch(err => console.log(err));\n        setComment('');\n      } else {\n        navigate('/login');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SubmitContainter, {\n    onSubmit: handleCommentSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      required: true,\n      maxLength: 500,\n      value: comment,\n      placeholder: \"\\uB313\\uAE00\\uC744 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694\",\n      onChange: e => setComment(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      value: \"\\uB313\\uAE00 \\uB4F1\\uB85D\",\n      onClick: handleCommentSubmit,\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentSubmitBox, \"5ZC88/1QUpFsZc5IK3pG7QIs01c=\", false, function () {\n  return [useSelector, useSelector, useSelector, useNavigate];\n});\n_c2 = CommentSubmitBox;\nexport default CommentSubmitBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"SubmitContainter\");\n$RefreshReg$(_c2, \"CommentSubmitBox\");","map":{"version":3,"names":["styled","useState","useNavigate","useSelector","axios","Button","SubmitContainter","form","CommentSubmitBox","value","submitComment","setModifying","setData","comment","setComment","accessToken","state","refreshToken","memberId","navigate","handleCommentSubmit","e","preventDefault","trim","console","log","process","env","REACT_APP_API_URL","patch","body","headers","Authorization","Refresh","then","res","data","catch","err","Number","post","target"],"sources":["/Users/apple/seb41_main_001/client/src/components/CommentSubmitBox.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport Button from './Button';\n\nconst SubmitContainter = styled.form`\n  width: 100%;\n  display: flex;\n  textarea {\n    width: 100%;\n    height: 120px;\n    margin-right: 20px;\n    background-color: rgba(255, 255, 255, 0);\n    color: white;\n    font-size: 100%;\n    padding: 10px;\n    &::placeholder {\n      font-size: 100%;\n    }\n  }\n  button {\n    white-space: nowrap;\n  }\n`;\n\n// TODO: handleCommentSubmit props로 받을 것.\n\ninterface CommentSubmitProps {\n  value?: string;\n  submitComment: string;\n  setModifying?: (value: boolean) => void;\n  setData: any;\n}\n\nconst CommentSubmitBox = ({\n  value = '',\n  submitComment,\n  setModifying,\n  setData,\n}: CommentSubmitProps) => {\n  const [comment, setComment] = useState(value);\n  // const LOGIN_ID = localStorage.getItem('memberId') || -1;\n  const accessToken = useSelector((state: any) => state.accessToken);\n  const refreshToken = useSelector((state: any) => state.refreshToken);\n  const memberId = useSelector((state: any) => state.memberId);\n  const navigate = useNavigate();\n  const handleCommentSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    if (comment.trim() !== '' && setModifying) {\n      // 댓글을 수정하는 경우\n      console.log(\n        `PATCH ${process.env.REACT_APP_API_URL}${submitComment}`,\n        comment,\n      );\n      axios\n        .patch(\n          `${process.env.REACT_APP_API_URL}${submitComment}`,\n          {\n            body: comment,\n            memberId,\n          },\n          {\n            headers: {\n              Authorization: accessToken,\n              Refresh: refreshToken,\n            },\n          },\n        )\n        .then((res) => {\n          console.log(res);\n          setData(res.data.data);\n        })\n        .catch((err) => console.log(err));\n      setModifying(false);\n    } else if (comment.trim() !== '') {\n      // 댓글을 등록하는 경우\n      console.log(`POST ${submitComment}`, comment);\n      if (memberId && Number(memberId) !== -1) {\n        axios\n          .post(\n            `${process.env.REACT_APP_API_URL}${submitComment}`,\n            {\n              body: comment,\n              memberId,\n            },\n            {\n              headers: {\n                Authorization: accessToken,\n                Refresh: refreshToken,\n              },\n            },\n          )\n          .then((res) => {\n            console.log(res);\n            setData(res.data.data);\n          })\n          .catch((err) => console.log(err));\n        setComment('');\n      } else {\n        navigate('/login');\n      }\n    }\n  };\n\n  return (\n    <SubmitContainter onSubmit={handleCommentSubmit}>\n      <textarea\n        required\n        maxLength={500}\n        value={comment}\n        placeholder=\"댓글을 작성해주세요\"\n        onChange={(e) => setComment(e.target.value)}\n      />\n      <Button value=\"댓글 등록\" onClick={handleCommentSubmit} type=\"submit\" />\n    </SubmitContainter>\n  );\n};\n\nexport default CommentSubmitBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}