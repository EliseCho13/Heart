{"ast":null,"code":"var _jsxFileName = \"/Users/apple/seb41_main_001/client/src/components/CommentSubmitBox.tsx\",\n  _s = $RefreshSig$();\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubmitContainter = styled.form`\n  width: 100%;\n  display: flex;\n  textarea {\n    width: 100%;\n    height: 120px;\n    margin-right: 20px;\n    background-color: rgba(255, 255, 255, 0);\n    color: white;\n    font-size: 100%;\n    padding: 10px;\n    &::placeholder {\n      font-size: 100%;\n    }\n  }\n  button {\n    white-space: nowrap;\n  }\n`;\n\n// TODO: handleCommentSubmit props로 받을 것.\n_c = SubmitContainter;\nconst CommentSubmitBox = ({\n  value = '',\n  submitComment,\n  setModifying,\n  setData\n}) => {\n  _s();\n  const [comment, setComment] = useState(value);\n  // const LOGIN_ID = localStorage.getItem('memberId') || -1;\n  const accessToken = useSelector(state => state.accessToken);\n  const refreshToken = useSelector(state => state.refreshToken);\n  const memberId = useSelector(state => state.memberId);\n  const navigate = useNavigate();\n  const handleCommentSubmit = e => {\n    e.preventDefault();\n    if (comment.trim() !== '' && setModifying) {\n      // 댓글을 수정하는 경우\n      console.log(`PATCH ${process.env.REACT_APP_API_URL}${submitComment}`, comment);\n      axios.patch(`${process.env.REACT_APP_API_URL}${submitComment}`, {\n        body: comment,\n        memberId\n      }, {\n        headers: {\n          Authorization: accessToken,\n          Refresh: refreshToken\n        }\n      }).then(res => {\n        console.log(res);\n        setData(res.data.data);\n      }).catch(err => console.log(err));\n      setModifying(false);\n    } else if (comment.trim() !== '') {\n      // 댓글을 등록하는 경우\n      console.log(`POST ${submitComment}`, comment);\n      if (memberId && Number(memberId) !== -1) {\n        axios.post(`${process.env.REACT_APP_API_URL}${submitComment}`, {\n          body: comment,\n          memberId\n        }, {\n          headers: {\n            Authorization: accessToken,\n            Refresh: refreshToken\n          }\n        }).then(res => {\n          console.log(res);\n          setData(res.data.data);\n        }).catch(err => console.log(err));\n        setComment('');\n      } else {\n        navigate('/login');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SubmitContainter, {\n    onSubmit: handleCommentSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      required: true,\n      maxLength: 500,\n      value: comment,\n      placeholder: \"\\uB313\\uAE00\\uC744 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694\",\n      onChange: e => setComment(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      value: \"\\uB313\\uAE00 \\uB4F1\\uB85D\",\n      onClick: handleCommentSubmit,\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentSubmitBox, \"5ZC88/1QUpFsZc5IK3pG7QIs01c=\", false, function () {\n  return [useSelector, useSelector, useSelector, useNavigate];\n});\n_c2 = CommentSubmitBox;\nexport default CommentSubmitBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"SubmitContainter\");\n$RefreshReg$(_c2, \"CommentSubmitBox\");","map":{"version":3,"names":["styled","useState","useNavigate","useSelector","axios","Button","jsxDEV","_jsxDEV","SubmitContainter","form","_c","CommentSubmitBox","value","submitComment","setModifying","setData","_s","comment","setComment","accessToken","state","refreshToken","memberId","navigate","handleCommentSubmit","e","preventDefault","trim","console","log","process","env","REACT_APP_API_URL","patch","body","headers","Authorization","Refresh","then","res","data","catch","err","Number","post","onSubmit","children","required","maxLength","placeholder","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","_c2","$RefreshReg$"],"sources":["/Users/apple/seb41_main_001/client/src/components/CommentSubmitBox.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport Button from './Button';\n\nconst SubmitContainter = styled.form`\n  width: 100%;\n  display: flex;\n  textarea {\n    width: 100%;\n    height: 120px;\n    margin-right: 20px;\n    background-color: rgba(255, 255, 255, 0);\n    color: white;\n    font-size: 100%;\n    padding: 10px;\n    &::placeholder {\n      font-size: 100%;\n    }\n  }\n  button {\n    white-space: nowrap;\n  }\n`;\n\n// TODO: handleCommentSubmit props로 받을 것.\n\ninterface CommentSubmitProps {\n  value?: string;\n  submitComment: string;\n  setModifying?: (value: boolean) => void;\n  setData: any;\n}\n\nconst CommentSubmitBox = ({\n  value = '',\n  submitComment,\n  setModifying,\n  setData,\n}: CommentSubmitProps) => {\n  const [comment, setComment] = useState(value);\n  // const LOGIN_ID = localStorage.getItem('memberId') || -1;\n  const accessToken = useSelector((state: any) => state.accessToken);\n  const refreshToken = useSelector((state: any) => state.refreshToken);\n  const memberId = useSelector((state: any) => state.memberId);\n  const navigate = useNavigate();\n  const handleCommentSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    if (comment.trim() !== '' && setModifying) {\n      // 댓글을 수정하는 경우\n      console.log(\n        `PATCH ${process.env.REACT_APP_API_URL}${submitComment}`,\n        comment,\n      );\n      axios\n        .patch(\n          `${process.env.REACT_APP_API_URL}${submitComment}`,\n          {\n            body: comment,\n            memberId,\n          },\n          {\n            headers: {\n              Authorization: accessToken,\n              Refresh: refreshToken,\n            },\n          },\n        )\n        .then((res) => {\n          console.log(res);\n          setData(res.data.data);\n        })\n        .catch((err) => console.log(err));\n      setModifying(false);\n    } else if (comment.trim() !== '') {\n      // 댓글을 등록하는 경우\n      console.log(`POST ${submitComment}`, comment);\n      if (memberId && Number(memberId) !== -1) {\n        axios\n          .post(\n            `${process.env.REACT_APP_API_URL}${submitComment}`,\n            {\n              body: comment,\n              memberId,\n            },\n            {\n              headers: {\n                Authorization: accessToken,\n                Refresh: refreshToken,\n              },\n            },\n          )\n          .then((res) => {\n            console.log(res);\n            setData(res.data.data);\n          })\n          .catch((err) => console.log(err));\n        setComment('');\n      } else {\n        navigate('/login');\n      }\n    }\n  };\n\n  return (\n    <SubmitContainter onSubmit={handleCommentSubmit}>\n      <textarea\n        required\n        maxLength={500}\n        value={comment}\n        placeholder=\"댓글을 작성해주세요\"\n        onChange={(e) => setComment(e.target.value)}\n      />\n      <Button value=\"댓글 등록\" onClick={handleCommentSubmit} type=\"submit\" />\n    </SubmitContainter>\n  );\n};\n\nexport default CommentSubmitBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}